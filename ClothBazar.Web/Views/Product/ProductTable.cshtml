@model NewProductViewModel

@{
    ViewBag.Title = "ProductTable";
}
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js" ></script>
<div>
    <form method="post" action="/Product/ProductTable">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">

                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" />

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </form>

</div>
<h2>ProductTable</h2>



<div id="tableContiner">


    <table id="ProductsTable" class="table table-striped">
        <thead>
            <tr>
                <td>Product Name</td>
                <td>Description</td>
                <td>Category</td>
                <td>ImageURL</td>
                <td>Price</td>
                <td>Actions</td>
            </tr>
        </thead>
        <tbody>

            @foreach (var product in Model.Products)
            {
            <tr>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>

                    @if (product.Category != null)
                    {
                        <Text>@product.Category.Name</Text>
                    }
                    else
                    {
                        <Text>-</Text>
                    }
                </td>
                <td>
                    <div class="thumb">
                        <img id="categoryImage" src="@product.ImageURL" width="50" height="50" />

                    </div>
                </td>
                <td>@product.Price</td>
                <td>
                    <button class="editButton" data-id="@product.ID">Edit</button>
                    <button class="deleteButton" data-id="@product.ID">Delete</button>
                    <button class="add-to-cart" data-id="@product.ID">Add to Cart</button>
                </td>
            </tr>
            }




        </tbody>
    </table>
    <div>
        @*@if (Model.PageNo != 1)
            {
                <button id="PreviouspageButton" class="pageButtons" data-pageNo="@(Model.PageNo-1)">Previous</button>
            }

            <button class="pageButtons" data-pageNo="@(Model.PageNo+1)">Next</button>*@
    </div>
</div>

<script>

    let table = new DataTable('#ProductsTable');
    //New Button
    $(".pageButtons").click(function () {

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                pageNo: $(this).attr("data-pageNo")
            }

        })
            .done(function (response) {

                $("#tableContiner").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    });

    //Search Button
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {

                $("#tableContiner").html(response);
                focusAction("tableContiner")
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    });

    //Reset Button
    $("#resetBtn").click(function () {
        var searchValue = ''

        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {

                $("#tableContiner").html(response);
                focusAction("tableContiner")
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    });
    //New Button
    $("#newBtn").click(function () {
        $.ajax({
            url: '@Url.Action("create", "Product")',

        })
            .done(function (response) {

                $("#actionContiner").html(response);
                focusAction("actionContiner")

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    });
    //Edit Button
    $(".editButton").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Product")',
            data: {
                ID: $(this).attr('data-id')
            }
        })
            .done(function (response) {

                $("#actionContiner").html(response);
                focusAction("actionContiner")

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    });

    //Delete Button
    $(".deleteButton").click(function () {
        swal({
            title: "Confirm?",
            text: "Are You Sure you want to Delete this Product!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Product")' ,
                        data: {
                            ID: $(this).attr('data-id')
                        }
                    })
                        .done(function (response) {

                            $("#tableContiner").html(response);
                            focusAction("tableContiner")

                            swal("Record Deleted Successfully", {
                                icon: "success",
                            });

                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Fail")
                        });



                }
                //else {
                //    swal("Your imaginary file is safe!");
                //}
            });

        //var confirmDelete = confirm("Are You Sure you want to Delete this Product!");

        //if (confirmDelete)
        //{
        //    $.ajax({
        //        type: 'POST',
        //        url: '/Product/Delete',
        //        data: {
        //            ID: $(this).attr('data-id')
        //        }
        //    })
        //        .done(function (response) {

        //            $("#tableContiner").html(response);


        //        })
        //        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        //            alert("Fail")
        //        });
        //}


    });
    var products = [];
    //Cart Button
    $(".add-to-cart").click(function () {

        var productId = $(this).attr('data-id')

        products.push(productId)

        $.cookie('CartProducts', products.join('-'), { path: '/' });

    });

</script>
